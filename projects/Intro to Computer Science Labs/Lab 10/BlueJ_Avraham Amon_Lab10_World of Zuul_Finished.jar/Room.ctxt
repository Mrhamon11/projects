#BlueJ class context
comment0.params=description
comment0.target=Room(java.lang.String)
comment0.text=\r\n\ Create\ a\ room\ described\ "description".\ Initially,\ it\ has\r\n\ no\ exits.\ "description"\ is\ something\ like\ "a\ kitchen"\ or\r\n\ "an\ open\ court\ yard".\r\n\ @param\ description\ The\ room's\ description.\r\n
comment1.params=direction\ neighbor
comment1.target=void\ setExit(java.lang.String,\ Room)
comment1.text=\r\n\ Define\ an\ exit\ from\ this\ room.\r\n\ @param\ direction\ The\ direction\ of\ the\ exit.\r\n\ @param\ neighbor\ \ The\ room\ to\ which\ the\ exit\ leads.\r\n
comment10.params=
comment10.target=java.util.ArrayList\ getExitList()
comment10.text=\r\n\ Creates\ an\ Arraylist\ of\ strings\ for\ all\ of\ the\ availiable\r\n\ exits\ found\ in\ any\ particular\ room.\r\n\r\n\ @return\ The\ ArrayList\ of\ all\ of\ the\ exits\r\n
comment11.params=
comment11.target=java.util.HashSet\ allRoomItems()
comment11.text=\r\n\ Creates\ a\ HashSet\ of\ all\ of\ the\ items\ in\ a\ particular\ \r\n\ room.\r\n\r\n\ @return\ All\ of\ the\ items\ in\ the\ room\r\n
comment2.params=
comment2.target=java.lang.String\ getShortDescription()
comment2.text=\r\n\ @return\ The\ short\ description\ of\ the\ room\r\n\ (the\ one\ that\ was\ defined\ in\ the\ constructor).\r\n
comment3.params=
comment3.target=java.lang.String\ getLongDescription()
comment3.text=\r\n\ Return\ a\ description\ of\ the\ room\ in\ the\ form\:\r\n\ \ \ \ \ You\ are\ in\ the\ kitchen.\r\n\ \ \ \ \ Exits\:\ north\ west\r\n\ @return\ A\ long\ description\ of\ this\ room\r\n
comment4.params=
comment4.target=java.lang.String\ getExitString()
comment4.text=\r\n\ Return\ a\ string\ describing\ the\ room's\ exits,\ for\ example\r\n\ "Exits\:\ north,\ west".\r\n\ @return\ Details\ of\ the\ room's\ exits.\r\n
comment5.params=direction
comment5.target=Room\ getExit(java.lang.String)
comment5.text=\r\n\ Return\ the\ room\ that\ is\ reached\ if\ we\ go\ from\ this\ room\ in\ direction\r\n\ "direction".\ If\ there\ is\ no\ room\ in\ that\ direction,\ return\ null.\r\n\ @param\ direction\ The\ exit's\ direction.\r\n\ @return\ The\ room\ in\ the\ given\ direction.\r\n
comment6.params=newItem
comment6.target=void\ addItem(Item)
comment6.text=\r\n\ Adds\ new\ item\ to\ the\ room.\r\n\r\n\ @param\ newItem\ The\ new\ item\r\n
comment7.params=
comment7.target=java.lang.String\ getItemString()
comment7.text=\r\n\ Returns\ all\ items\ that\ are\ currently\ in\ a\ specific\ room.\r\n\r\n\ @return\ Every\ item\ in\ the\ room\r\n
comment8.params=item
comment8.target=Item\ removeItem(Item)
comment8.text=\r\n\ Removes\ a\ specific\ item\ from\ the\ current\ room.\r\n\r\n\ @param\ item\ The\ item\ to\ be\ removed\r\n\ @return\ The\ item\ that\ was\ removed,\ or\ null\ if\ the\ item\ was\ not\ found\r\n
comment9.params=itemName
comment9.target=Item\ searchItems(java.lang.String)
comment9.text=\r\n\ Searches\ the\ room\ for\ the\ desired\ item\ and\ returns\ it\ if\ the\ item\ is\r\n\ found\ in\ the\ room.\r\n\r\n\ @param\ itemName\ The\ item\ we\ are\ searching\ for\r\n\ @return\ The\ item\ if\ found,\ and\ null\ if\ not\r\n
numComments=12
